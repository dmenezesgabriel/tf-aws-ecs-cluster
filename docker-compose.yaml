services:
  auth:
    build: ./services/auth
    ports:
      - "8001:80"
    env_file:
      - ./.env
    command: uvicorn main:app --host 0.0.0.0 --port 80 --reload
    volumes:
      - ./services/auth:/app/
    networks:
      - app-network

  command:
    build: ./services/command
    ports:
      - "8002:80"
    command: uvicorn main:app --host 0.0.0.0 --port 80 --reload
    volumes:
      - ./services/command:/app/
    depends_on:
      - postgres
    env_file:
      - ./.env
    networks:
      - app-network

  command-migrations:
    build: ./services/command
    volumes:
      - ./services/command:/app/
    env_file:
      - .env
    command: bash -c "while !</dev/tcp/postgres/5432; do sleep 1; done; alembic -c migrations/alembic/alembic.ini upgrade head"
    networks:
      - app-network

  postgres:
    image: postgres:16.0-alpine
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DATABASE=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  localstack:
    image: localstack/localstack:latest
    ports:
      - "127.0.0.1:4566:4566"
      - "127.0.0.1:4510-4559:4510-4559"
    environment:
      - SERVICES=${SERVICES-lambda,s3,apigateway,cloudwatch,dynamodb,sqs,kinesis,serverless,secretsmanager,ssm}
      - DEBUG=${DEBUG-}
      - LOCALSTACK_PERSISTENCE=1
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./localstack_volume}:/var/lib/localstack"
      - "./init-aws.sh:/etc/localstack/init/ready.d/init-aws.sh" # ready hook
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
